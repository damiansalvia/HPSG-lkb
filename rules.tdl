head-complement-rule-1 := phrase &
[ HEAD #head,
  VAL [
    SPR #spr, 
    COMPS < >,
    MOD #mods
  ],   
  ARGS < [ 
           HEAD #head,
           VAL [
              SPR #spr, 
              COMPS < #comp >,
              MOD #mods
           ] 
         ],  
         #comp >  
].

head-complement-rule-2 := phrase &
[ HEAD #head,
  VAL [
    SPR #spr, 
    COMPS < >,
    MOD #mods
  ],   
  ARGS < [ 
           HEAD #head,
           VAL [ 
             SPR #spr, 
             COMPS < #comp1, #comp2 >,
             MOD #mods
           ] 
         ],
         #comp1, 
         #comp2 >
].

head-complement-rule-2-inv := phrase &
[ HEAD verb,
  VAL [
    SPR #spr, 
    COMPS < >,
    MOD #mods
  ],   
  ARGS < [ 
           HEAD verb,
           VAL [ 
             SPR #spr, 
             COMPS < #comp1, #comp2 >,
             MOD #mods
           ] 
         ],
         #comp2, 
         #comp1 >
].

head-complement-modifier-rule-1 := phrase &
[ HEAD #head,
  VAL [
    SPR #spr, 
    COMPS < >,
    MOD < >
  ],   
  ARGS < [ 
           HEAD #head,
           VAL [
              SPR #spr, 
              COMPS < #comp >,
              MOD < #mod >
           ] 
         ],  
         #mod,
         #comp >  
].

head-complement-modifier-rule-2-1 := phrase &
[ HEAD #head,
  VAL [
    SPR #spr, 
    COMPS < >,
    MOD < >
  ],   
  ARGS < [ 
           HEAD #head,
           VAL [ 
             SPR #spr, 
             COMPS < #comp1, #comp2 >,
             MOD < #mod >
           ] 
         ],
         #mod, 
         #comp1,
         #comp2 >
].

head-complement-modifier-rule-2-2 := phrase &
[ HEAD #head,
  VAL [
    SPR #spr, 
    COMPS < >,
    MOD < >
  ],   
  ARGS < [ 
           HEAD #head,
           VAL [ 
             SPR #spr, 
             COMPS < #comp1, #comp2 >,
             MOD < #mod >
           ] 
         ], 
         #comp1,
         #mod,
         #comp2 >
].

head-specifier-rule := phrase &
[ HEAD #head,
  VAL [ 
    SPR < >,
    COMPS < >,
    MOD < >
  ],
  ARGS < #spr,
         [ 
           HEAD #head,
           VAL [
             SPR < #spr >,
             COMPS < >,
             MOD < >
           ] 
         ]>
].  

head-modifier-rule-0-1 := phrase &
[ HEAD #head,
  VAL [
    SPR #spr, 
    COMPS < >,
    MOD < >
  ],   
  ARGS < [ 
           HEAD #head,
           VAL [
             SPR #spr, 
             COMPS < >,
             MOD < [] >
           ] 
         ] >  
].

head-modifier-rule-0-2 := phrase &
[ HEAD #head,
  VAL [
    SPR #spr, 
    COMPS < >,
    MOD < >
  ],   
  ARGS < [ 
           HEAD #head,
           VAL [
             SPR #spr, 
             COMPS < >,
             MOD < [],[] >
           ] 
         ] >  
].

head-modifier-rule-1 := phrase &
[ HEAD #head,
  VAL [
    SPR #spr, 
    COMPS < >,
    MOD < >
  ],   
  ARGS < [ 
           HEAD #head,
           VAL [
             SPR #spr, 
             COMPS < >,
             MOD < #mod >
           ] 
         ],  
         #mod >  
].

head-modifier-rule-3-adv := phrase &
[ HEAD #head,
  VAL [
    SPR #spr, 
    COMPS < >,
    MOD < #pp1, #pp2 >
  ],   
  ARGS < [ 
           HEAD #head,
           VAL [ 
             SPR #spr, 
             COMPS < >,
             MOD < #pp1, #pp2, #adv >
           ] 
         ],
         #adv >  
].

head-modifier-rule-3-pp := phrase &
[ HEAD #head,
  VAL [
    SPR #spr, 
    COMPS < >,
    MOD < #pp2, #adv >
  ],   
  ARGS < [ 
           HEAD #head,
           VAL [ 
             SPR #spr, 
             COMPS < >,
             MOD < #pp1, #pp2, #adv >
           ] 
         ],
         #pp1 >  
].

head-modifier-rule-3-pp-pp := phrase &
[ HEAD #head,
  VAL [
    SPR #spr, 
    COMPS < >,
    MOD < #adv >
  ],   
  ARGS < [ 
           HEAD #head,
           VAL [ 
             SPR #spr, 
             COMPS < >,
             MOD < #pp1, #pp2, #adv >
           ] 
         ],
         #pp1,
         #pp2 >  
].
